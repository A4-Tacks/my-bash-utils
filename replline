#!/usr/bin/bash

arg_input=''
REPLY=''

OPTIND=1
while getopts aAi:h opt; do case "$opt" in
    a) arg_input=first;;
    A) arg_input=last;;
    i) REPLY=$OPTARG;;
    h)
        printf 'Usage: %q [Options] <command> [args...]\n' "${0##*/}"
        echo 'REPL input command'
        printf 'Example: %q -a jq -n\n' "${0##*/}"
        echo
        printf '%s\n' \
            'Options:' \
            '    -a                 use first arg input' \
            '    -A                 use last arg input' \
            '    -i <text>          like read -i, readline init text' \
            '    -h                 show help' \
            && exit
        ;;
    :|\?)
        ((--OPTIND <= 0)) && OPTIND=1
        printf '%q: parse args failed, near by %q\n' "$0" "${!OPTIND}" >&2
        exit 2
esac done
set -- "${@:OPTIND}"
cmd=${1?parse args failed, expected a arg}
shift
printf -v prompt '%q' "$cmd"
prompt+='> '

printf 'REPL for %q' "$cmd"
[ $# -ne 0 ] && printf ' %q' "$@"
echo

trap 'printf "\r%s\e[K\n%s%s" "Use Ctrl-U Ctrl+D exit REPL" "$prompt" "$REPLY"' int

HISTFILE=~/.replline_history
touch -- "$HISTFILE" \
    && history -r \
    || exit

exitcode=0

prev=$REPLY

while read -rep "$prompt" -i "$REPLY"; do
    if [ "$arg_input" = first ]; then
        "$cmd" "$REPLY" "$@"
    elif [ "$arg_input" = last ]; then
        "$cmd" "$@" "$REPLY"
    else
        "$cmd" "$@" <<< "$REPLY"
    fi
    exitcode=$?
    [ $exitcode -ne 0 ] && echo $'\n'"exit code: $exitcode" >&2
    [ "$prev" != "$REPLY" ] && history -s -- "$REPLY"
    prev=$REPLY
done

echo
history -w
exit $exitcode
